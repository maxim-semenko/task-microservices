version: '3.3'
services:

  eureka-server:
    image: my-app/eureka-server:latest
    container_name: eureka-server
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring

  rabbitmq:
    ports:
      - '15673:15672'
      - '5673:5672'
    volumes:
      - '/C//rabbitmq/data:/var/lib/rabbitmq/mnesia'
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
    image: 'rabbitmq:3-management'
    networks:
      - spring

  postgres:
    container_name: 'postgres'
    image: 'postgres'
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - PGDATA=/data/postgres
    volumes:
      - 'postgres:/data/postgres'
    ports:
      - '5431:5432'
    networks:
      - 'postgres'
    restart: unless-stopped

  pgadmin:
    container_name: 'pgadmin'
    image: 'dpage/pgadmin4'
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - 'pgadmin:/var/lib/pgadmin'
    ports:
      - '5040:80'
    networks:
      - 'postgres'
    restart: 'unless-stopped'

  kc_postgres:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    networks:
      - spring
      - kc_postgres

  keycloak:
    container_name: 'keycloak'
    image: quay.io/keycloak/keycloak:18.0
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: kc_postgres
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_SCHEMA: public
      DB_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HTTP_PORT: 8090
    ports:
      - '8090:8090'
    depends_on:
      - kc_postgres
    command: start-dev
    networks:
      - spring
      - kc_postgres

  user-service:
    image: 'my-app/user-service:latest'
    ports:
      - '8084:8084'
    container_name: 'user-service'
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
      - postgres
    depends_on:
      - postgres
      - rabbitmq

  gambling-service:
    image: 'my-app/gambling-service:latest'
    ports:
      - '8081:8081'
    container_name: 'gambling-service'
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
      - postgres
    depends_on:
      - postgres
      - rabbitmq

  invoice-service:
    image: 'my-app/invoice-service:latest'
    ports:
      - '8082:8082'
    container_name: 'invoice-service'
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
      - postgres
    depends_on:
      - postgres
      - rabbitmq

  gateway-service:
    image: 'my-app/api-gateway-service:latest'
    ports:
      - '8083:8083'
    container_name: 'gateway-service'
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring

networks:
  postgres:
    driver: bridge
  kc_postgres:
    driver: bridge
  spring:
    driver: bridge

volumes:
  postgres:
  pgadmin:
  postgres_data:
    driver: local